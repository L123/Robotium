package com.example.android.ceping.test;

import static org.junit.Assert.assertEquals;
import android.view.View;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.robotium.solo.Solo;
public class RobotiumTest1 {

	//退出登录
		public void loginout(Solo solo){
			solo.clickOnView(solo.getView("home_top_iv_left"));
			solo.clickOnText("账号设置");
			solo.waitForText("注销", 1, 10000);
			solo.clickOnText("注销");
			checkMessage(solo, "登录");
		}
		
		//检查页面信息
		public void checkMessage(Solo solo,String message){
			solo.waitForText(message,1,10000);
			boolean actual = solo.searchText(message);
			boolean expected = true;
			assertEquals("没有找到【"+message+"】按钮",expected,actual);
		}
		
		//登录
		public void login(Solo solo,String username,String password){
			checkMessage(solo, "登录");	
			solo.clearEditText(0);
			solo.clearEditText(1);
			solo.enterText(0, username);
			solo.enterText(1, password);
			//点击 按钮  
			solo.clickOnView(solo.getView("login_bt"));  //点击登录按钮
		}
		//判断应用是否登录，若果没有登录就调用login（）方法进行登录操作
		public void checkLogin(Solo solo){
			if(solo.searchText("登录")==false){
				solo.waitForText("七天诊断", 1, 10000);
				//loginout();
			}
			else{		
				login(solo, "teachertest02","jiaoyu");
				solo.waitForText("七天诊断", 1, 10000);
			}
			checkMessage(solo, "七天诊断");
		}
		
		//进入同步训练章节页面，打开试卷，课本名称参数：listMessage，章节：chapter
		public void syncExercises(Solo solo,String listMessage,String chapter){
			solo.clickOnText("同步训练");
			solo.waitForText(listMessage);
			//同步练习课程列表中的listMessage
			solo.clickOnView((View) solo.getText(listMessage).getParent().getParent());
			TextView TV = solo.getText(chapter);
			RelativeLayout R = (RelativeLayout) TV.getParent();
			View button = (View) R.getChildAt(2);//.findViewWithTag("com.dtedu.mobile.evation.bean.Catalog@b5234688");
			solo.clickOnView(button);
			solo.sleep(10000);
		}
		//进入专项训练知识点页面，点击知识点生成试卷，知识点名称参数：listMessage
		public void specialExercises(Solo solo,String listMessage){
			solo.clickOnText("专项训练");
			solo.waitForText(listMessage);
			solo.clickOnView((View)solo.getText(listMessage).getParent().getParent());
			solo.sleep(10000);
		}
		
		//进入考试训练，点击列表中的试卷，试卷名称参数：listMessage
		public void examExercises(Solo solo,String listMessage){
			solo.clickOnText("考试训练");
			solo.waitForText(listMessage);
			solo.clickOnView((View)solo.getText(listMessage).getParent());
			solo.sleep(10000);
			
		}
		
		/*public void answer(Solo solo){
			do{
				if(solo.getView("button_A").getId()==0){
					solo.clickOnButton("A");
				}
				else if(solo.getView("exam_next_title_btn")!=null){
					solo.enterText(0, "sorry");
					solo.clickOnView(solo.getView("exam_next_title_btn"));
				}
				
				else if(solo.getView("handle_imageview")!=null){
					solo.clickOnView(solo.getView("handle_imageview"));
					solo.sleep(1000);
					do{
						if(solo.getView("button_child_A")!=null){
							solo.clickOnButton("A");
						}
						
						else if(solo.getView("exam_child_next_title_btn")!=null){
							solo.enterText(0, "sorry");
							solo.clickOnView(solo.getView("exam_child_next_title_btn"));
						}
						
					}while(solo.getView("button_A")!=null || solo.getView("exam_child_next_title_btn")!=null);
					
				}
			}while(solo.searchText("发送")==false);
			
			solo.sleep(1000);
			
			if(solo.getView("button_A")!=null || solo.getView("button_child_A")!=null){
				solo.clickOnText("交卷");
				solo.clickOnView(solo.getView("sureBT"));
				solo.sleep(2000);
				solo.goBack();
				solo.goBack();
			}
		}*/
		
}
