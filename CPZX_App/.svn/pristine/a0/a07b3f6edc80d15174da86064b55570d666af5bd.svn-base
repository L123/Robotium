package com.example.android.ceping.test;

import org.junit.Test;

import com.robotium.solo.Solo;

public class myCollect {
	RobotiumTest1 RT = new RobotiumTest1();
	Config C = new Config();
	@Test
	//添加试题到测试库生成试卷
	public void makePaper(Solo solo,String grade,String subject,int n) {
		solo.clickOnView(solo.getView("home_top_iv_left"));
		solo.clickOnText(C.MYCOLLECT);
		RT.choose(solo,grade,subject);
		RT.addQuestions(solo, n);
		
	}
	//对试题进行取消收藏,返回首页n操作的试题个数，m是否取消收藏
	public void cancleTestQuestions(Solo solo,String grade,String subject,int n,int m){
		solo.clickOnView(solo.getView("home_top_iv_left"));
		solo.clickOnText(C.MYCOLLECT);
		RT.choose(solo,grade,subject);
		for(int i=0;i<n;i++){
			if(solo.waitForText(C.CANCLE_FAVOURITES)==true){			
				solo.clickOnText(C.CANCLE_FAVOURITES);	
				if(m==1){
					solo.clickOnView(solo.getView("sureBT"));
				}
				else{
					solo.clickOnView(solo.getView("cancel"));
				}
			}
			else{
				solo.scrollToSide(solo.RIGHT);
			}					
		}
		solo.goBack();
		solo.sleep(1000);
	}
	
	//试题移出测试库
	public void outOfQuestions(Solo solo,String grade,String subject){
		solo.clickOnView(solo.getView("home_top_iv_left"));
		solo.clickOnText(C.MYCOLLECT);
		RT.choose(solo,grade,subject);
		//solo.waitForText(C.OUT_OF_TEST_LIBRARY);
		if(solo.waitForText(C.OUT_OF_TEST_LIBRARY)==true){
			solo.clickOnText(C.OUT_OF_TEST_LIBRARY);	
		}
		else if(solo.waitForText(C.ADD_TEST_LIBRARY)==true){
			solo.clickOnText(C.ADD_TEST_LIBRARY);
			solo.sleep(1000);
			solo.clickOnText(C.OUT_OF_TEST_LIBRARY);
		}
		RT.checkMessage(solo, C.ADD_TEST_LIBRARY);
		solo.goBack();
	}
}
